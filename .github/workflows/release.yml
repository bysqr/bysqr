name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-darwin:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [ x86_64, aarch64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure
        if: matrix.arch == 'x86_64'
        run: |
          rustup target add x86_64-apple-darwin
          echo "TARGET=x86_64-apple-darwin" >> $GITHUB_ENV
          echo "DIST=bysqr-darwin-x86_64" >> $GITHUB_ENV
          echo "DIST_HEADLESS=bysqr-darwin-x86_64-headless" >> $GITHUB_ENV
      - name: Configure
        if: matrix.arch == 'aarch64'
        run: |
          rustup target add aarch64-apple-darwin
          echo "TARGET=aarch64-apple-darwin" >> $GITHUB_ENV
          echo "DIST=bysqr-darwin-aarch64" >> $GITHUB_ENV
          echo "DIST_HEADLESS=bysqr-darwin-aarch64-headless" >> $GITHUB_ENV
      - name: Build
        run: |
          mkdir -p target/dist
          cargo build --release --bin bysqrcli --target $TARGET
          cp target/$TARGET/release/bysqrcli target/dist/$DIST_HEADLESS
          cargo build --release --bin bysqrcli --target $TARGET --features preview
          cp target/$TARGET/release/bysqrcli target/dist/$DIST
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ x86_64, aarch64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure
        if: matrix.arch == 'x86_64'
        run: |
          sudo apt-get install -y build-essential
          rustup target add x86_64-unknown-linux-gnu
          echo "TARGET=x86_64-unknown-linux-gnu" >> $GITHUB_ENV
          echo "DIST=bysqr-linux-x86_64" >> $GITHUB_ENV
          echo "DIST_HEADLESS=bysqr-linux-x86_64-headless" >> $GITHUB_ENV
      - name: Configure
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          rustup target add aarch64-unknown-linux-gnu
          echo "TARGET=aarch64-unknown-linux-gnu" >> $GITHUB_ENV
          echo "DIST=bysqr-linux-aarch64" >> $GITHUB_ENV
          echo "DIST_HEADLESS=bysqr-linux-aarch64-headless" >> $GITHUB_ENV
      - name: Build
        run: |
          mkdir -p target/dist
          cargo build --release --bin bysqrcli --target $TARGET
          cp target/$TARGET/release/bysqrcli target/dist/$DIST_HEADLESS
          cargo build --release --bin bysqrcli --target $TARGET --features preview
          cp target/$TARGET/release/bysqrcli target/dist/$DIST
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure
        run: |
          sudo apt-get install -y build-essential clang
          cargo install wasm-pack
          rustup target add wasm32-unknown-unknown
      - name: Build
        run: |
          mkdir -p target/dist
          wasm-pack build --target web --features wasm
          tar -czf target/dist/bysqr-wasm.tar.gz pkg/*
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ x86_64, aarch64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure
        if: matrix.arch == 'x86_64'
        run: |
          rustup target add x86_64-pc-windows-msvc
          echo "TARGET=x86_64-pc-windows-msvc" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DIST=bysqr-win-x86_64.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DIST_HEADLESS=bysqr-win-x86_64-headless.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Configure
        if: matrix.arch == 'aarch64'
        run: |
          rustup target add aarch64-pc-windows-msvc
          echo "TARGET=aarch64-pc-windows-msvc" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DIST=bysqr-win-aarch64.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DIST_HEADLESS=bysqr-win-aarch64-headless.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Build
        run: |
          mkdir -Force target\dist
          cargo build --release --bin bysqrcli --target $env:TARGET
          Copy-Item "target\$env:TARGET\release\bysqrcli.exe" "target\dist\$env:DIST_HEADLESS"
          cargo build --release --bin bysqrcli --target $env:TARGET --features preview
          Copy-Item "target\$env:TARGET\release\bysqrcli.exe" "target\dist\$env:DIST"
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
